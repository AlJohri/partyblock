from . import db, BaseModel

class Issue(BaseModel, db.Model):
    id = db.Column(db.BigInteger, primary_key=True)
    status = db.Column(db.String)
    description = db.Column(db.String)
    url = db.Column(db.String)
    summary = db.Column(db.String)
    html_url = db.Column(db.String)
    comment_url = db.Column(db.String)
    shortened_url = db.Column(db.String)
    address = db.Column(db.String)
    lat = db.Column(db.Float)
    lng = db.Column(db.Float)
    closed_at = db.Column(db.String)
    acknowledged_at = db.Column(db.String)
    created_at = db.Column(db.DateTime)
    updated_at = db.Column(db.DateTime)
    reporter_id = db.Column(db.BigInteger, db.ForeignKey('reporter.id'))

    def __init__(self, **kwargs):
        self.id = kwargs.get('id')
        self.status = kwargs.get('status')
        self.description = kwargs.get('description')
        self.url = kwargs.get('url')
        self.summary = kwargs.get('summary')
        self.html_url = kwargs.get('html_url')
        self.comment_url = kwargs.get('comment_url')
        self.shortened_url = kwargs.get('shortened_url')
        self.address = kwargs.get('address')
        self.lat = kwargs.get('lat')
        self.lng = kwargs.get('lng')
        self.closed_at = kwargs.get('closed_at')
        self.acknowledged_at = kwargs.get('acknowledged_at')
        self.created_at = kwargs.get('created_at')
        self.updated_at =  kwargs.get('updated_at')
